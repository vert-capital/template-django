version: "3.7"

volumes:
  data:

services:
  db:
    image: postgres:14-alpine
    env_file: ./src/.env
    ports:
      - 5432:5432
    volumes:
      - ./src:/app
  app:
    build:
      context: ./src
      dockerfile: ./Dockerfile-dev
    environment:
      DJANGO_SETTINGS_MODULE: conf.settings
    ports:
      - 8080:8080
    volumes:
      - ./src:/app
    depends_on:
      - db
  mail:
    image: mailhog/mailhog:v1.0.1
    ports:
      - 8025:8025
  djangoq:
    build:
      context: ./src
      dockerfile: ./Dockerfile-dev
    command: python manage.py qcluster
    volumes:
      - ./src:/app
    depends_on:
      - app
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  webkafka:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9030:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL=PLAINTEXT
      - KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM=PLAIN
